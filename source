using System;

namespace QuickSortAlgorithm
{
    class Program
    {
        static void Main()
        {
            int elements = 10;
            int[] inputArray = new int[elements];
            Random random = new Random();
            for (int i = 0; i < inputArray.Length; ++i)
                inputArray[i] = random.Next(0, 10);
            Console.WriteLine($"Before sorted: {string.Join(" ", inputArray)}");
            int[] sortedArray = QuickSort(inputArray, 0, inputArray.Length-1);
            Console.WriteLine($"Sorted array: {string.Join(" ", sortedArray)}");
        }
        private static int[] QuickSort(int[] array, int minIndex, int maxIndex)
        {
            if (minIndex >= maxIndex)
                return array;
            int pivotIndex = GetPivotIndex(array, minIndex, maxIndex);
            QuickSort(array, minIndex, pivotIndex - 1);
            QuickSort(array, pivotIndex + 1, maxIndex);
            return array;
        }
        private static int GetPivotIndex(int[] array, int minIndex, int maxIndex)
        {
            int pivot = minIndex - 1;
            for (int i = minIndex; i <= maxIndex; ++i)
            {
                if (array[i] < array[maxIndex])
                {
                    ++pivot;
                    Swap(ref array[pivot], ref array[i]);
                }
            }
            ++pivot;
            if(pivot > pivot - 1)
                Swap(ref array[pivot], ref array[maxIndex]);
            return pivot;
        }
        private static void Swap(ref int leftItem, ref int rightItem)
        {
            int temp = leftItem;
            leftItem = rightItem;
            rightItem = temp;
        }
    }
}
